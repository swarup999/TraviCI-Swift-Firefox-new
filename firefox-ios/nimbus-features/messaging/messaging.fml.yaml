# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
---
about:
  description: Configuration for the messaging component
  swift:
    class: FxNimbusMessaging
    module: Client
channels:
  - developer
  - beta
  - release
features:
  messaging:
    description: >
      The in-app messaging system
    meta-bug: ~
    documentation:
      - name: User documentation
        url:  https://experimenter.info/messaging/mobile-messaging
    contacts:
      # Nimbus team
      - jhugman@mozilla.com
      - brennie@mozilla.com
      # iOS team
      - gbuciu@mozilla.com
      - wteichmann@mozilla.com
    events:
      - https://dictionary.telemetry.mozilla.org/apps/firefox_ios/metrics/messaging_shown
      - https://dictionary.telemetry.mozilla.org/apps/firefox_ios/metrics/messaging_clicked
      - https://dictionary.telemetry.mozilla.org/apps/firefox_ios/metrics/messaging_expired
      - https://dictionary.telemetry.mozilla.org/apps/firefox_ios/metrics/messaging_dismissed
      - https://dictionary.telemetry.mozilla.org/apps/firefox_ios/metrics/messaging_malformed

    # Allow the feature to be enrolled in more than one experiment at the same time.
    allow-coenrollment: true

    variables:

      messages:
        description: >
          A growable collection of messages, where the
          Key is the message identifier and the value
          is its associated MessageData.
        type: Map<MessageKey, MessageData>
        string-alias: MessageKey
        default: {}

      triggers:
        description: >
          A collection of out the box trigger
          expressions. Each entry maps to a
          valid JEXL expression.
        type: Map<TriggerName, String>
        string-alias: TriggerName
        default: {}

      styles:
        description: >
          A map of styles to configure message
          appearance.
        type: Map<StyleName, StyleData>
        string-alias: StyleName
        default: {}

      actions:
        type: Map<ActionName, String>
        description: A growable map of action URLs.
        string-alias: ActionName
        default: {}

      on-control:
        type: ControlMessageBehavior
        description: What should be displayed when a control message is selected.
        default: show-next-message

      ~~experiment:
        type: ExperimentSlug
        string-alias: ExperimentSlug
        description: Not to be set by experiment.
        default: "{experiment}"

      message-under-experiment:
        type: Option<MessageKey>
        description: 'Deprecated. Please use "experiment": "{experiment}" instead.'
        default: null

    defaults:
      - value:
          triggers:
              ALWAYS: "true"
              NEVER: "false"

objects:
  MessageData:
    description: >
      An object to describe a message. It uses human
      readable strings to describe the triggers, action and
      style of the message as well as the text of the message
      and call to action.
    fields:
      action:
        # We would like this to be of ActionName type, but it accepts https:// URLs
        # so changing this would be a breaking change.
        type: Option<ActionName>
        description: >
          The name of a deeplink URL to be opened if the button is clicked.
        default: null
      action-params:
        type: Map<String, String>
        description: Query parameters appended to the deeplink action URL
        default: {}
      title:
        type: Option<Text>
        description: "The title text displayed to the user"
        default: null
      text:
        type: Text
        description: "The message text displayed to the user"
        # This should never be defaulted.
        default: ""
      is-control:
        type: Boolean
        description: "Indicates if this message is the control message, if true shouldn't be displayed"
        default: false
      button-label:
        type: Option<Text>
        description: >
          The text on the button. If no text
          is present, the whole message is clickable.
        default: null
      style:
        type: StyleName
        description: >
          The style as described in a
          `StyleData` from the styles table.
        default: DEFAULT

      trigger-if-all:
        type: List<TriggerName>
        description: >
          A list of strings corresponding to targeting expressions.
          All named expressions must evaluate to true if the message is
          to be eligible to be shown.
        default:
          - ALWAYS

      except-if-any:
        type: List<TriggerName>
        description: >
          A list of strings corresponding to
          targeting expressions. If any of these expressions evaluate to
          `true`, the message will not be eligible.
        default: []

      surface:
        type: MessageSurfaceId
        description: Each message will tell us the surface it is targeting with this.
        default: Unknown
      experiment:
        type: Option<ExperimentSlug>
        description: The experiment slug that this message is involved in.
        default: null
        
      microsurveyConfig:
        type: Option<MicrosurveyConfig>
        description: Optional configuration data for a microsurvey.
        default: null

  StyleData:
    description: >
      A group of properities (predominantly visual) to
      the describe style of the message.
    fields:
      priority:
        type: Int
        description: >
          The importance of this message.
          0 is not very important, 100 is very important.
        default: 50
      max-display-count:
        type: Int
        description: >
          How many sessions will this message be shown to the user
          before it is expired.
        default: 5

  MicrosurveyConfig:
    description: >
        Attributes relating to microsurvey messaging.
    fields:
      utm-content:
        description: The name used to provide as the utm_content parameter for the privacy notice.
        type: Option<String>
        default: null
      icon:
        description: The asset name in our bundle used as the icon shown in the survey.
        type: Image
        default: lightbulbLarge
      options:
        description: The list of survey options to present to the user.
        type: List<Text>
        default: [] # Should not be defaulted

enums:
  MessageSurfaceId:
    description: >
      For messaging, we would like to have a message tell us which surface its associated with.
      This is a label that matches across both Android and iOS.
    variants:
      new-tab-card:
        description: This is the card that appears at the top on the Firefox Home Page.
      survey:
        description: This is a full-page that appears providing a survey to the user.
      microsurvey:
        description: This is a microsurvey that appears on top of the bottom toolbar to the user.
      notification:
        description: This is a local notification send to the user periodically with tips and updates.
      Unknown:
        description: A message has NOT declared its target surface.

  ControlMessageBehavior:
    description: An enum to influence what should be displayed when a control message is selected.
    variants:
      show-next-message:
        description: The next eligible message should be shown.
      show-none:
        description: The surface should show no message.
